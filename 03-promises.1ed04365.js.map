{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,uBAC9BC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAE/BH,EAAKC,MAAMM,iBAAiB,QAASC,GACrCR,EAAKI,KAAKG,iBAAiB,QAASC,GACpCR,EAAKK,OAAOE,iBAAiB,QAASC,GACtCR,EAAKM,KAAKC,iBAAiB,UAa3B,SAAkBE,GAChBA,EAAMC,iBAEN,MAAMC,EAAUC,aAAY,KAsB9B,IAAuBC,EAAUZ,EAV7B,IAwBW,IAATa,IACFC,EAAUC,EAASD,IAfAF,EApBLI,EAAU,EAoBKhB,EApBFc,EAqBtB,IAAIG,SAAQ,KACjB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFrB,EAAAyB,OAAOC,QAAQ,qBAAqBX,QAAeZ,OAEnDH,EAAAyB,OAAOE,QAAQ,oBAAoBZ,QAAeZ,SAEnDA,OA5BAyB,MAAK,EAACb,SAAEA,EAAQZ,MAAEA,MACjB0B,QAAQC,IAAI,qBAAqBf,QAAeZ,UAEjD4B,OAAM,EAAChB,SAAEA,EAAQZ,MAAEA,MAClB0B,QAAQC,IAAI,oBAAoBf,QAAeZ,UAGnDa,GAAO,EACPG,GAAW,EACPA,IAAYa,EAKd,OAJAC,cAAcpB,GACdM,EAAU,EACVH,GAAO,OACPC,EAAU,SA/BhB,IAAID,GAAO,EACPG,EAAU,EACVF,EAAU,EACVC,EAAS,EACTc,EAAW,EAEf,SAAStB,IACNO,EAAUiB,OAAOhC,EAAKC,MAAMgC,OAC1BjB,EAASgB,OAAOhC,EAAKI,KAAK6B,OAC1BH,EAAWE,OAAOhC,EAAKK,OAAO4B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form'),\n};\nrefs.delay.addEventListener('input', onInput);\nrefs.step.addEventListener('input', onInput);\nrefs.amount.addEventListener('input', onInput);\nrefs.form.addEventListener('submit', onSubmit);\nlet flag = true;\nlet counter = 0;\nlet delayEL = 0;\nlet stepEl = 0;\nlet amountEl = 0;\n\nfunction onInput() {\n  (delayEL = Number(refs.delay.value)),\n    (stepEl = Number(refs.step.value)),\n    (amountEl = Number(refs.amount.value));\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  const timerId = setInterval(() => {\n    flagOn();\n    createPromise(counter + 1, delayEL)\n      .then(({ position, delay }) => {\n        console.log(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    flag = false;\n    counter += 1;\n    if (counter === amountEl) {\n      clearInterval(timerId);\n      counter = 0;\n      flag = true;\n      delayEL = 0;\n      return;\n    }\n  });\n}\n\nfunction createPromise(position, delay) {\n  return new Promise(() => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction flagOn() {\n  if (flag === false) {\n    delayEL = stepEl + delayEL;\n  }\n}\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","form","addEventListener","$47d4ff9957288465$var$onInput","event","preventDefault","timerId","setInterval","position","$47d4ff9957288465$var$flag","$47d4ff9957288465$var$delayEL","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$counter","Promise","shouldResolve","Math","random","setTimeout","Notify","success","failure","then","console","log","catch","$47d4ff9957288465$var$amountEl","clearInterval","Number","value"],"version":3,"file":"03-promises.1ed04365.js.map"}